name: Release

on:
  push:
    tags: 
      - 'v*'

jobs:
  macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          export HOMEBREW_NO_AUTO_UPDATE=true
          brew install create-dmg
          cargo install cargo-bundle
      - name: Install ARM target
        run: rustup update && rustup target add aarch64-apple-darwin && rustup target add x86_64-apple-darwin
      - name: Bundle X64
        run: cargo bundle --release --target=x86_64-apple-darwin
      - name: Bundle ARM
        run: cargo bundle --release --target=aarch64-apple-darwin
      - name: Make DMG
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 15
          max_attempts: 5
          warning_on_retry: false
          retry_on: error
          command: |
            cd target/x86_64-apple-darwin/release/bundle/osx/
            create-dmg --volname "Tank Installer" \
             --volicon "Tank.app/Contents/Resources/Tank.icns" \
             --window-pos 200 120 \
             --window-size 800 400 \
             --icon-size 100 \
             --icon "Tank.app" 200 190 \
             --hide-extension "Tank.app" \
             --app-drop-link 600 185 \
             "Tank-Installer.dmg" \
             "Tank.app"

            cd -
            cd target/aarch64-apple-darwin/release/bundle/osx/
            create-dmg --volname "Tank Installer" \
             --volicon "Tank.app/Contents/Resources/Tank.icns" \
             --window-pos 200 120 \
             --window-size 800 400 \
             --icon-size 100 \
             --icon "Tank.app" 200 190 \
             --hide-extension "Tank.app" \
             --app-drop-link 600 185 \
             "Tank-Installer.dmg" \
             "Tank.app"
      - name: Get Tag Name
        run: |
          echo "TAG_NAME=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
      - name: Change name
        run: |
          mv target/x86_64-apple-darwin/release/bundle/osx/Tank-Installer.dmg "target/Tank-${{ env.TAG_NAME }}-x64.dmg"
          mv target/aarch64-apple-darwin/release/bundle/osx/Tank-Installer.dmg "target/Tank-${{ env.TAG_NAME }}-aarch64.dmg"
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: artifact-macos
          path: |
            target/Tank-${{ env.TAG_NAME }}-x64.dmg
            target/Tank-${{ env.TAG_NAME }}-aarch64.dmg

  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: dotnet tool install --global wix --version 4.0.5
      - name: Get Tag Name
        run: |
          echo "TAG_NAME=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
      - name: Create msi installer
        run: |
          cargo build --release
          wix extension add WixToolset.UI.wixext/4.0.5 WixToolset.Util.wixext/4.0.5
          wix build -arch "x64" -ext WixToolset.UI.wixext -ext WixToolset.Util.wixext \
          -out "target/Tank-${{ env.TAG_NAME }}-installer-x64.msi" "wix/tank.wxs"
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: artifact-windows
          path: target/Tank-${{ env.TAG_NAME }}-installer-x64.msi

  linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get install libwebkit2gtk-4.1-dev -y
          cargo install cargo-bundle
      - name: Bundle
        run: cargo bundle --release --target=x86_64-unknown-linux-gnu --format=deb
      - name: Get Tag Name
        run: |
          echo "TAG_NAME=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: artifact-linux
          path: |
            target/x86_64-unknown-linux-gnu/release/bundle/deb/tank_${{ env.TAG_NAME }}_amd64.deb
  release:
    runs-on: ubuntu-latest
    needs: [macos, windows, linux] 

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: artifact-*
        merge-multiple: true
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        draft: true
        artifacts: "artifacts/*.dmg,artifacts/*.msi,artifacts/*.deb"
